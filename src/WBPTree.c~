#include "Common.h"
#include "WBPTree.h"
#include <stdio.h>
#include <stdlib.h>




void WBP_Tree_Create(struct WBPTree *tree,unsigned int B)
{
  unsigned long size=8;
  
 
  tree=malloc(sizeof(struct WBPTree));
             
  tree->root=WBPT_CreateInnerNode(size,0);
  tree->B=B;
  tree->num_inodes=0;
  tree->num_leaves=0;
  tree->max_height=0;
  
}


int WBP_Tree_Insert(struct WBPTree *tree,unsigned long long B)
{




}


int  WBP_Tree_Delete(struct WBPTree *tree,unsigned long long data)
{


}
int  WBP_Tree_Search(struct WBPTree *tree,unsigned long long data)
{



}



struct WBPT_INode* WBPT_CreateInnerNode(unsigned long size,unsigned long node_id)
{
  
  struct WBPT_INode *node=malloc(sizeof(struct WBPT_INode));
  node->size=size;
  node->node_id=node_id;
  node->dividers=malloc(size*sizeof(unsigned long));
  node->child_nodes=malloc(size*sizeof(void*));
  return node;
}


struct WBPT_









int main(int argc,char *argv[])
{

  struct WBPTree *tree;
  WBP_Tree_Create(tree,128);
  printf("WBPT Test\n");


  return 0;
}
